/// <reference types="node" />
import { AbiItem, Callback, CeloTxObject, Contract, EventLog } from '@celo/connect';
import { EventEmitter } from 'events';
import Web3 from 'web3';
import { ContractEvent, EventOptions } from './types';
export interface ScoreManager extends Contract {
    clone(): ScoreManager;
    methods: {
        groupScores(arg0: string): CeloTxObject<{
            score: string;
            exists: boolean;
            0: string;
            1: boolean;
        }>;
        initialized(): CeloTxObject<boolean>;
        owner(): CeloTxObject<string>;
        renounceOwnership(): CeloTxObject<void>;
        transferOwnership(newOwner: string): CeloTxObject<void>;
        validatorScores(arg0: string): CeloTxObject<{
            score: string;
            exists: boolean;
            0: string;
            1: boolean;
        }>;
        initialize(): CeloTxObject<void>;
        setGroupScore(group: string, score: number | string): CeloTxObject<void>;
        setValidatorScore(validator: string, score: number | string): CeloTxObject<void>;
        getGroupScore(group: string): CeloTxObject<string>;
        getValidatorScore(validator: string): CeloTxObject<string>;
        getVersionNumber(): CeloTxObject<{
            0: string;
            1: string;
            2: string;
            3: string;
        }>;
    };
    events: {
        GroupScoreSet: ContractEvent<{
            group: string;
            score: string;
            0: string;
            1: string;
        }>;
        OwnershipTransferred: ContractEvent<{
            previousOwner: string;
            newOwner: string;
            0: string;
            1: string;
        }>;
        ValidatorScoreSet: ContractEvent<{
            validator: string;
            score: string;
            0: string;
            1: string;
        }>;
        allEvents: (options?: EventOptions, cb?: Callback<EventLog>) => EventEmitter;
    };
}
export declare const ABI: AbiItem[];
export declare function newScoreManager(web3: Web3, address: string): ScoreManager;
